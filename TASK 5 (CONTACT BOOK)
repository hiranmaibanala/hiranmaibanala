class Contact:
    def __init__(self, name, phone, email, address):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address

class ContactBook:
    def __init__(self):
        self.contacts = []

    def add_contact(self, name, phone, email, address):
        new_contact = Contact(name, phone, email, address)
        self.contacts.append(new_contact)
        print(f'Contact {name} added successfully.')

    def view_contacts(self):
        if not self.contacts:
            print('No contacts available.')
        else:
            for contact in self.contacts:
                print(f'Name: {contact.name}, Phone: {contact.phone}')

    def search_contact(self, query):
        found_contacts = [contact for contact in self.contacts if query.lower() in contact.name.lower() or query in contact.phone]
        if not found_contacts:
            print('No contacts found.')
        else:
            for contact in found_contacts:
                self.display_contact(contact)

    def update_contact(self, query):
        for contact in self.contacts:
            if query.lower() == contact.name.lower() or query == contact.phone:
                print('Contact found:')
                self.display_contact(contact)
                contact.name = input("Enter new name: ")
                contact.phone = input("Enter new phone number: ")
                contact.email = input("Enter new email: ")
                contact.address = input("Enter new address: ")
                print(f'Contact {contact.name} updated successfully.')
                return
        print('Contact not found.')

    def delete_contact(self, query):
        for contact in self.contacts:
            if query.lower() == contact.name.lower() or query == contact.phone:
                self.contacts.remove(contact)
                print(f'Contact {contact.name} deleted successfully.')
                return
        print('Contact not found.')

    def display_contact(self, contact):
        print(f'Name: {contact.name}, Phone: {contact.phone}, Email: {contact.email}, Address: {contact.address}')

def main():
    contact_book = ContactBook()

    print("Contact Book Application")
    print("Instructions: Enter the corresponding number for the action you want to take.")

    while True:
        print("\n1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")

        if choice == '1':
            name = input("Enter name: ")
            phone = input("Enter phone number: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            contact_book.add_contact(name, phone, email, address)
        elif choice == '2':
            contact_book.view_contacts()
        elif choice == '3':
            query = input("Enter name or phone number to search: ")
            contact_book.search_contact(query)
        elif choice == '4':
            query = input("Enter name or phone number to update: ")
            contact_book.update_contact(query)
        elif choice == '5':
            query = input("Enter name or phone number to delete: ")
            contact_book.delete_contact(query)
        elif choice == '6':
            print("Exiting the application.")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main()
